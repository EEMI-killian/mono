# In all environments, the following files are loaded if they exist,
# the latter taking precedence over the former:
#
#  * .env                contains default values for the environment variables needed by the app
#  * .env.local          uncommitted file with local overrides
#  * .env.$APP_ENV       committed environment-specific defaults
#  * .env.$APP_ENV.local uncommitted environment-specific overrides
#
# Real environment variables win over .env files.
#
# DO NOT DEFINE PRODUCTION SECRETS IN THIS FILE NOR IN ANY OTHER COMMITTED FILES.
# https://symfony.com/doc/current/configuration/secrets.html
#
# Run "composer dump-env prod" to compile .env files for production use (requires symfony/flex >=1.2).
# https://symfony.com/doc/current/best_practices.html#use-environment-variables-for-infrastructure-configuration

###> symfony/framework-bundle ###
APP_ENV=dev
APP_SECRET=
###< symfony/framework-bundle ###

###> doctrine/doctrine-bundle ###
# Format described at https://www.doctrine-project.org/projects/doctrine-dbal/en/latest/reference/configuration.html#connecting-using-a-url
# IMPORTANT: You MUST configure your server version, either here or in config/packages/doctrine.yaml
#
# DATABASE_URL="sqlite:///%kernel.project_dir%/var/data.db"
# DATABASE_URL="mysql://app:!ChangeMe!@127.0.0.1:3306/app?serverVersion=8.0.32&charset=utf8mb4"
# DATABASE_URL="mysql://app:!ChangeMe!@127.0.0.1:3306/app?serverVersion=10.11.2-MariaDB&charset=utf8mb4"
DATABASE_URL="postgresql://app:test@127.0.0.1:5432/app?serverVersion=16&charset=utf8"
###< doctrine/doctrine-bundle ###

###> symfony/messenger ###
# Choose one of the transports below
# MESSENGER_TRANSPORT_DSN=amqp://guest:guest@localhost:5672/%2f/messages
# MESSENGER_TRANSPORT_DSN=redis://localhost:6379/messages
MESSENGER_TRANSPORT_DSN=doctrine://default?auto_setup=0
###< symfony/messenger ###

###> symfony/mailer ###
MAILER_DSN=null://null
###< symfony/mailer ###

POSTGRES_VERSION=16
POSTGRES_DB=data
POSTGRES_PASSWORD=test
POSTGRES_USER=app

PROMPT_TEXT="Analyze the given image and provide an in-depth description of the outfit worn by the person(s) present, including clothing, footwear, and accessories. Focus only on the outfit, without describing the general scene or background.

For each detected item (clothing, footwear, accessories), return the following information in JSON format:

category: The general category of the item (e.g., 'clothing', 'footwear', 'accessory').
type: The specific type of item (e.g., 't-shirt', 'pants', 'jacket', 'sneakers', 'watch', 'hat', 'backpack', 'gloves', etc.).
color: The main color of the detected item, or null if not identifiable.
brand: The brand of the item if visible, or null if no brand is detected.
material: The fabric or material of the item (e.g., 'cotton', 'denim', 'leather', 'wool', 'metal', 'synthetic'), or null if not identifiable.
fit: The style or fit of the clothing item (e.g., 'oversized', 'slim fit', 'baggy', 'cropped', 'regular fit'), or null if not applicable.
length: The length of the item (e.g., 'short', 'medium', 'long', 'ankle-length', 'waist-length'), or null if not applicable.
closure: The type of closure or fastening mechanism (e.g., 'zipper', 'buttons', 'laces', 'slip-on', 'buckle', 'elastic'), or null if not applicable.
condition: The apparent condition of the item (e.g., 'new', 'worn', 'vintage', 'distressed', 'faded'), or null if not identifiable.
extra_details: Additional notable features such as logos, text, embroidery, visible design elements, or unique characteristics (e.g., 'Nike logo on the chest', 'gold buckle', 'silver chain', 'zippered pockets').
If multiple items are present, list each item individually with its respective attributes. If no items are detected, return an empty object {}.

Additionally, provide:

A structured and detailed textual summary of the outfit, listing the items in a logical order (upper body, lower body, footwear, accessories). This should include details about the combination of items, their fit, materials, colors, and how they work together.
A global outfit analysis, identifying the overall style (e.g., 'casual', 'sporty', 'streetwear', 'formal', 'vintage', 'minimalist') and how the different elements contribute to that aesthetic."